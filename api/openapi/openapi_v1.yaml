openapi: "3.0.0"

info:
  version: "0.1.0"
  title: "ChartGPT API"
  description: "The ChartGPT API is a REST API that generates insights from data based on natural language questions."

servers:
  - url: "https://api.chartgpt.***REMOVED***"

paths:
  /v1/ask_chartgpt:
    post:
      summary: "Ask ChartGPT a question"
      description: "This endpoint takes a question and returns a response."
      operationId: api.request.ask_chartgpt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: "The prompt based on which the response will be generated."
                  example: "Plot the average APR for the ***REMOVED*** protocol in the past 6 months."
                data_source_url:
                  type: string
                  description: "The data source URL based on which the response will be generated. The entity is optional. If not specified, the default data source will be used."
                  pattern: "^(?:([a-z]+)/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)(?:/([a-zA-Z0-9_-]+))?)?$"
                  example: "data_source/project/collection/entity"
                  default: ""
                output_type:
                  $ref: '#/components/schemas/OutputType'
                max_outputs:
                  type: integer
                  description: "The maximum number of outputs to generate."
                  default: 10
                max_attempts:
                  type: integer
                  description: "The maximum number of attempts to generate an output."
                  default: 10
                max_tokens:
                  type: integer
                  description: "The maximum number of tokens to use for generating an output."
                  default: 10
                stream:
                  type: boolean
                  description: "Whether to stream the response."
                  default: false
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: "Bad request"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
        '500':
          description: "Internal server error"

# Apply the API key globally to all operations
security:
  - ApiKeyAuth: []     # use the same name as under securitySchemes

components:
  # Define the key name and location
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY  # name of the header, query parameter or cookie
      x-apikeyInfoFunc: api.auth.apikey_auth
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
  schemas:
    Response:
      type: object
      properties:
        id:
          type: string
          description: "The ID of the request."
        created_at:
          type: integer
          description: "The timestamp of when the request was created."
        finished_at:
          type: integer
          description: "The timestamp of when the request was finished."
        status:
          type: string
          description: "The status of the request."
        prompt:
          type: string
          description: "The prompt of the request."
        dataset_id:
          type: string
          description: "The dataset ID of the request."
        attempts:
          type: array
          description: "The attempts of the request."
          items:
            $ref: "#/components/schemas/Attempt"
        output_type:
          $ref: '#/components/schemas/OutputType'
        outputs:
          type: array
          description: "The outputs of the request."
          items:
            $ref: "#/components/schemas/Output"
        errors:
          type: array
          description: "The errors of the request."
          items:
            $ref: "#/components/schemas/Error"
        usage:
          type: object
          description: "The usage of the request."
          properties:
            tokens:
              type: integer
              description: "The number of tokens used for the request."
    Attempt:
      type: object
      properties:
        index:
          type: integer
          description: "The index of the attempt."
        created_at:
          type: integer
          description: "The timestamp of when the attempt was created."
        outputs:
          type: array
          description: "The outputs of the attempt."
          items:
            $ref: "#/components/schemas/Output"
        errors:
          type: array
          description: "The errors of the attempt."
          items:
            $ref: "#/components/schemas/Error"
    Output:
      type: object
      properties:
        index:
          type: integer
          description: "The index of the output."
        created_at:
          type: integer
          description: "The timestamp of when the output was created."
        description:
          type: string
          description: "The description of the output."
        type:
          type: string
          description: "The type of the output."
        value:
          type: string
          description: "The value of the output."
    Error:
      type: object
      properties:
        index:
          type: integer
          description: "The index of the error."
        created_at:
          type: integer
          description: "The timestamp of when the error was created."
        type:
          type: string
          description: "The type of the error."
        value:
          type: string
          description: "The value of the error."
    Usage:
      type: object
      properties:
        tokens:
          type: integer
          description: "The number of tokens used for the request."
    OutputType:
      description: "The output type of the response."
      type: string
      default: any
      enum:
        # Standard types
        - any
        - int
        - float
        - string
        - bool
        # Complex types
        - plotly_chart
        - pandas_dataframe
        # String types
        - sql_query
        - python_code
        - python_output
