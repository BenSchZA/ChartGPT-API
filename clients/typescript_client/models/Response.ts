/**
 * ChartGPT API
 * The ChartGPT API is a REST API that generates insights from data based on natural language questions.
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Attempt } from '../models/Attempt';
import { Message } from '../models/Message';
import { Output } from '../models/Output';
import { OutputType } from '../models/OutputType';
import { ResponseUsage } from '../models/ResponseUsage';
import { Status } from '../models/Status';
import { HttpFile } from '../http/http';

/**
* Response
*/
export class Response {
    /**
    * The attempts of the request.
    */
    'attempts'?: Array<Attempt>;
    /**
    * The timestamp of when the request was created.
    */
    'createdAt'?: number;
    /**
    * The data source URL of the request.
    */
    'dataSourceUrl'?: string;
    /**
    * The errors of the request.
    */
    'errors'?: Array<Error>;
    /**
    * The timestamp of when the request was finished.
    */
    'finishedAt'?: number;
    /**
    * The messages of the request.
    */
    'messages'?: Array<Message>;
    'outputType'?: OutputType;
    /**
    * The outputs of the request.
    */
    'outputs'?: Array<Output>;
    /**
    * The session ID of the response.
    */
    'sessionId'?: string;
    'status'?: Status;
    'usage'?: ResponseUsage;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "attempts",
            "baseName": "attempts",
            "type": "Array<Attempt>",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "number",
            "format": ""
        },
        {
            "name": "dataSourceUrl",
            "baseName": "data_source_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "errors",
            "baseName": "errors",
            "type": "Array<Error>",
            "format": ""
        },
        {
            "name": "finishedAt",
            "baseName": "finished_at",
            "type": "number",
            "format": ""
        },
        {
            "name": "messages",
            "baseName": "messages",
            "type": "Array<Message>",
            "format": ""
        },
        {
            "name": "outputType",
            "baseName": "output_type",
            "type": "OutputType",
            "format": ""
        },
        {
            "name": "outputs",
            "baseName": "outputs",
            "type": "Array<Output>",
            "format": ""
        },
        {
            "name": "sessionId",
            "baseName": "session_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Status",
            "format": ""
        },
        {
            "name": "usage",
            "baseName": "usage",
            "type": "ResponseUsage",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Response.attributeTypeMap;
    }

    public constructor() {
    }
}



